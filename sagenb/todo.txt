Current TODO:
[x] preparser
[x] make sure all "/" is replaced by os.path.join, so will work on windows eventually.
[x] worksheet_process.py -- make it so graphics work, i.e., files created
[x] jsmath
[x] static documentation
[x] jmol
[x] tinymce
[x] @interact -- need to properly preparse and base64 encode maybe?
[x] live documentation
[x] introspection
[x] fill in not implemented stuff
[x] %cython
[x] control-c to stop notebook
[x] write pexpect based worksheet process system using the filesystem as before.
[x] reference should have restart reset state
[x] one user running another user's sage install on OS X -- Abort!
[x] implement ulimit/ssh/etc options like before
[x] good error message on crash of the sage process...
[x] max_walltime -- doesnt' work
[x] push my hg repo somewhere
[x] start public demo server using ssh
[x] simple notebook stress test
[x] trim list of alternative notebooks sessions when not run as part of sage.
[x] secure mode with sage present -- fix it
[x] uploading: "rbeezer -- williamstein: I tried one URL, one on disk,
both came back "internal server error" - I can try a few more.  Do you
want bugs in Trac or Google group"
[x] open(DATA+'/foo.txt','w')
DATA directory permissions issue -- the whole design of the "DATA" directory needs to be redone, since I vastly improved the security model of how the two-user notebook works (now all computations are done by a user that does *not* have permission to view or change *anything* in the server's sage_notebook directory -- everything happens in /tmp -- this is a VAST improvement, but means that DATA directory just doesn't work anymore as implemented). 
[x] "Upload or create data file attached to the worksheet '%s'"
[x] pure python mode now broken with expect implementation -- every input crashes worksheet
[x] notebook(...) command should *not* remember options from last run. that's just obnoxious.
[x] Downloading a file from data doesn't work
[x] data dropdown doesn't list uploaded files
[x] publishing + automically republish crashes with internal server error (harald schilly reported)
[x] "edit a copy" doesn't work [for published]
[x] "download" from published doesn't work right.
[x] (invalid) permissions of .sagenb directory:
drwxr-xr-x    5 wstein     staff    170 Sep 26 15:28 .sagenb
this is a problem unless we just switch back to using .sage directory in official release (which we will do!)
[x] notebook server should take ownership of all files it gets back
[x] Uploading file (button at bottom of page is misleading).
[x] (invalid) make patch to remove notebook from sage itself.
    We *can't* do this, because if we do, then old notebooks can't be migrated.  Ouch.
[x] make sure that the old notebook directory "just works" with the
new notebook: problem -- old notebooks unpickle into the old notebook
code.
[x] discard and quit crashes weirdly with *this* worksheet:
http://buzzard.ups.edu/private/Sample.sws (this was fixed by getting
rid of the conf.sobj useless crap, which according to hg I = William
Stein wrote! ouch)
[x] expect-based worksheet process without ssh and with ulimit -- see todo in interfaces/expect.py
[x] make it so usernames can be shorter/more arbitrary (requested by tom boothby, and he has a point)
[x] make an official spkg for inclusion in sage-4.1.2.
[x] show(plot(sin)); show(plot(cos))  only shows one plot
[x] reimplement sphinx introspection. 
    * confdir in cell.py won't work without a trivial Sphinx directory, when not in Sage. make it.
[x] sphinx: crazy insane whitespace -- see screenshot here:
      http://sage.math.washington.edu/home/wstein/patches/whitespace.png
    got from E = EllipticCurve([0,-39409298,0,5554231502,0]); 
    E.Lambda(<tab>
[x] "Sign into the Sage Notebook v" <-- missing version number
[x] version not listed in upper left corner of worksheet either

[x] sphinx: get math macros working on sphinx mode, e.g., if you do "ZZ?" you
    see "ZZ" in the docstring, but should get a bold ZZ.
[x] Copy your "a random test worksheet full of stuff". Go to
 "Data|foo.txt"; Change the text; Click "Save Changes" An error page appears.

[x] sphinx: factorial?? hangs

[x] bug search_doc(...) reported by victor miller

[x] migration didn't update user's conf field.

[ ] add message to the top of each *old* sage notebook .py file stating
 that one should work on sagenb instead.

[ ] yikes: one run two notebook servers on the same directory at same time (?)

[ ] change notebooks so they use a 100% sobj free data format for
storage, so that code refactoring is possible.  The plan is to do this
little by little, until no sobjs are needed.  Subtodolist:

TODO: 
   * implement to/from basic for server data
   * worksheet ratings
   * add that to data store
   * implement all worksheet data (except ratings) being stored in worksheet
     in say a JSON or Python header?  Maybe even make this info programmatically 
     accessible in worksheet?
   * switch over to using new model
   * when transitioning put new notebook in a directory with .sagenb extension:
         sage_notebook.sagenb

  [ ] worksheets -- the file worksheet.txt + filesystem
  [ ] worksheet attributes:   
      -- store all of this in a JSON at the top of worksheet.txt, except for ratings!
          - viewers
          - collaborators
          - autopublish
          - attached       
          - came_from
          - published_version
          - ratings
          - user_view
          - saved_by_info
          - is_doc_worksheet
          - last_edited
          - date_edited

  [ ] list of worksheets -- determined by the filesytem

  [ ] notebook:
         - conf
         - admins
         - log
         - history
         - history_count
         - server_pool
         - users

  [x] user:
         - username
         - password



Format for these files:
   * Windows INI config: http://docs.python.org/library/configparser.html
   * shlex: ick
   * xml -- ElementTree XML API looks nice: http://docs.python.org/library/xml.etree.elementtree.html

Brainstorm:

<?xml version="1.0" encoding="UTF-8"?>
<user login_name="wstein" password="@#%$QWAFSD" />


         


-------------------------------------------------------------------

See http://wiki.sagemath.org/SageTasks for a much more organized list...

[ ] instructions about running a daemon sage server with conf scripts:
http://groups.google.com/group/sage-support/browse_thread/thread/b0d15b82eea3d652

[ ] Review and incorporate http://trac.sagemath.org/sage_trac/ticket/7110

[ ] "data" link appears in reference implementation in output of every cell

[ ] filesize limit -- option so that any computation that produces a
file that exceeds a certain size would get deleted and replaced by a
message.  This would limit (though not prevent) damages.

[ ] Jonathan Gutow -- redo how jmol works

[ ] Get peter.jipsen's "canvas3d_lib.js + Pre3d does shaded surfaces" into Sage

[ ] notebook docs -- something in "doc/en/sagenb"

[ ] implement base_url

[ ] get rid of list of 'Sage Users' when publishing worksheets --
that's not appropriate given how sage has grown.

[ ] notebook(default_mode="python") way to make the notebook default
to use python instead of sage.

[ ] fulltext -- when output long, make it all available with a link
even before computation finishes, and definitely if it is interrupted!

[ ] write an overview of how the sage notebook works: http://wiki.sagemath.org/SageNotebook

[ ] switch from twisted.web2 to twisted.web.  Alex Clemesha says
"Pretty easily actually... the Resource object is pretty similar, the
main difference is that the Web2 Resource object has the "locateChild"
method, where as the Web Resource has "getChild" - and even those are
pretty similar.  Also, there's some subtle differences in the way you
doing "rendering"... i.e. with Web2 you subclass
Resource/PostableResource and then you use the "render" method, where
are with Web you just subclass Resource and implemented either
"render_GET" or "render_POST".  Probably just looking through the
examples here: http://jcalderone.livejournal.com/tag/sixty+seconds
would be good enough to do the switch."

[ ] move is_valid_username (etc.) out of twist.py, which is definitely *not* where it belongs

[ ] ldap support (see, eg., http://math.univ-lyon1.fr/~tdumont/sage)  but make sure to first
    abstract away authentication first so it is much CLEARER.

[ ] automated testing -- "Windmill seems to be more popular now -- especially with Python stuff "

[ ] make it so the set of worksheets for a given user is 100% determined by the filesystem, not the nb sobj

[ ] make it so the conf object is not an sobj

[ ] find a way to provide same info as data directory but without making it super-permissive.
    Maybe I can make an api for getting files from a data location or something...

[ ] control-c doesn't quite work for reference implementation quitting notebook server


[ ] make it so uploading a worksheet does not lock the server like it does now.

[ ] secure mode outside of sage -- fix it to work with openssl, etc.

[ ] more stress testing, etc., using mechanize: http://wwwsearch.sourceforge.net/mechanize/

[ ] worksheet process -- runs as another unix user.

[ ] have a worksheet export screen and the option to save just certain
parts (e.e., images, DATA, etc.) with checkboxes.

[ ] deprecate the objects directory (see notebook.py) -- I think this
is used nowhere

[ ] change api for notebook command; in particular enable capability
    to have different sage commadn on remote machine
[ ] worksheet processes using named pipes
[ ] code to benchmark notebook externally
[ ] implement %cython mode outside sage (and as a full mode?)
[ ] fix doctests
[ ] worksheet processes use fork
[ ] worksheet process use multiprocessing 
[ ] worksheet processes using server on remote machine
[ ] genuine infinite undo implemented not using stupid snapshots but a revision log
[ ] @interact: make it so docstring of function is somehow nicely typeset and accessible
[ ] @interact's that can be included with sage
[ ] "browse your computer" field of upload is not editable.  fix that.
[ ] improve tracebacks of % modes, e.g., %python then 1/0 is ugly.
[ ] "When I try to save a worksheet on uw... I first get "undefined" in
Safari 4.0.3, and then the second time I click a save button it works
fine.  This *always* happens." -- from kcrisman
[ ] "Save as" option when downloading worksheets (requested by bill
page) " prompts you with a pop-up for a name in the same way as
'Rename worksheet' and then does a Save.
[ ] and small hint about google accounts: in gmail at the bottom is a
"last account activity" line and if you click on details, you can see
what has happened recently. login IPs, type and time. you can also
invalidate all other sessions on other PCs where cookies are stored.
[ ] somehow connect http://qwebirc.org with Sage?
[ ] statistics of notebooks, e.g., how many per user, names of all users, how many users?
[ ] If a worksheet is still named "untitled" then perhaps the system
should not just blindly save it with that pseudo-title when you click
'Save' but rather automatically pop-up the rename box and invite the
user to change it before saving.
[ ] a way to put a code block between two text blocks that lie one
right after the other.

General TODO:

* component architecture: see Brickenstein sage-devel email 
  that mentions http://python-rum.org/browser/rum/component.py

* use memory mapped files for worksheet processes?
  http://docs.python.org/library/mmap.html
