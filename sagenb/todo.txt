Current TODO:
[x] preparser
[x] make sure all "/" is replaced by os.path.join, so will work on windows eventually.
[x] worksheet_process.py -- make it so graphics work, i.e., files created
[x] jsmath
[x] static documentation
[x] jmol
[x] tinymce
[x] @interact -- need to properly preparse and base64 encode maybe?
[x] live documentation
[x] introspection
[x] fill in not implemented stuff
[x] %cython
[x] control-c to stop notebook
[x] write pexpect based worksheet process system using the filesystem as before.
[x] reference should have restart reset state
[x] one user running another user's sage install on OS X -- Abort!
[x] implement ulimit/ssh/etc options like before
[x] good error message on crash of the sage process...
[x] max_walltime -- doesnt' work
[x] push my hg repo somewhere
[x] start public demo server using ssh
[x] simple notebook stress test
[x] trim list of alternative notebooks sessions when not run as part of sage.
[x] secure mode with sage present -- fix it
[x] uploading: "rbeezer -- williamstein: I tried one URL, one on disk,
both came back "internal server error" - I can try a few more.  Do you
want bugs in Trac or Google group"
[x] open(DATA+'/foo.txt','w')
DATA directory permissions issue -- the whole design of the "DATA" directory needs to be redone, since I vastly improved the security model of how the two-user notebook works (now all computations are done by a user that does *not* have permission to view or change *anything* in the server's sage_notebook directory -- everything happens in /tmp -- this is a VAST improvement, but means that DATA directory just doesn't work anymore as implemented). 
[x] "Upload or create data file attached to the worksheet '%s'"

[ ] pure python mode now broken with expect implementation -- every input crashes worksheet
[ ] notebook(...) command should *not* remember options from last run. that's just obnoxious.

[ ] data dropdown doesn't list uploaded files

[ ] notebook server should take ownership of all files it gets back

[ ] permissions of .sagenb directory:
drwxr-xr-x    5 wstein     staff    170 Sep 26 15:28 .sagenb
this is a problem unless we just switch back to using .sage directory in official release

[ ] Downloading a file from data doesn't work

[ ] Uploading file (button at bottom of page is misleading).

[ ] make sure that the old notebook directory "just works" with the new notebook:
problem -- old notebooks unpickle into the old notebook code!

[ ] reimplement sphinx introspection. 
    * confdir in cell.py won't work without a trivial Sphinx directory, when not in Sage. make it.

[ ] make an official spkg for inclusion in sage-4.1.3.

[ ] write an overview of how the sage notebook works.

-------------------------------------------------------------------

[ ] expect-based worksheet process without ssh and with ulimit -- see todo in interfaces/expect.py

[ ] automated testing -- "Windmill seems to be more popular now -- especially with Python stuff "

[ ] make it so usernames can be shorter/more arbitrary

[ ] make it so the set of worksheets for a given user is 100% determined by the filesystem, not the nb sobj

[ ] make it so the conf object is not an sobj

[ ] find a way to provide same info as data directory but without making it super-permissive.
    Maybe I can make an api for getting files from a data location or something...

[ ] control-c doesn't quite work for reference implementation quitting notebook server

[ ] make patch to remove notebook from sage itself.

[ ] make it so uploading a worksheet does not lock the server like it does now.

[ ] secure mode outside of sage -- fix it to work with openssl, etc.

[ ] more stress testing, etc., using mechanize: http://wwwsearch.sourceforge.net/mechanize/

[ ] worksheet process -- runs as another unix user.

[ ] change api for notebook command; in particular enable capability
    to have different sage commadn on remote machine
[ ] worksheet processes using named pipes
[ ] code to benchmark notebook externally
[ ] implement %cython mode outside sage (and as a full mode?)
[ ] fix doctests
[ ] worksheet processes use fork
[ ] worksheet process use multiprocessing 
[ ] worksheet processes using server on remote machine
[ ] genuine infinite undo implemented not using stupid snapshots but a revision log
[ ] @interact: make it so docstring of function is somehow nicely typeset and accessible
[ ] @interact's that can be included with sage
[ ] "browse your computer" field of upload is not editable.  fix that.
[ ] improve tracebacks of % modes, e.g., %python then 1/0 is ugly.

General TODO:

* component architecture: see Brickenstein sage-devel email 
  that mentions http://python-rum.org/browser/rum/component.py

* use memory mapped files for worksheet processes?
  http://docs.python.org/library/mmap.html
